#
# This plugin.info file is for plugins that are supported for 
# both SOC and NCP host sample applications
#

plugin(stack_bridge) {
  name=Stack Bridge
  description=This plugin provides solutions for cross-stack integration.
  category=Utility
  quality=development
  root=$BLUETOOTH_APP/common/stack_bridge

  architecture=efr32

  providedApis=stack_bridge

  headerFiles=common_includes.h,stack_bridge.h

  setup(macros) {
    -DCOMMON_HEADER="common_includes.h"
    -DPLATFORM_HEADER=COMMON_HEADER
    -DEMBER_STACK_BLE
  }

}

# plugin(command_interpreter_handler) {
#   name=Command Interpreter Handler
#   description=Handler for the command interpreter.
#   category=Utility
#   architecture=efr32
#   root=$BLUETOOTH_APP/common/user_command
# 
#   requiredApis=serial,command-interpreter
#   providedApis=command-interpreter-handler
# 
#   sourceFiles=user_command.c
# 
#   headerFiles=user_command.h
# 
# }
# 
# plugin(crc16_ccitt) {
#   name=CRC16 CCITT
#   description=Software implemented CRC-16-CCITT cyclic-redundancy check algorithm.
#   category=Utility
#   architecture=efr32
#   root=$BLUETOOTH_APP/common/crc
# 
#   providedApis=crc16
# 
#   sourceFiles=crc16.c
# 
#   headerFiles=crc16.h
# 
# }

plugin(psstore) {
  name=PSStore
  
  description=Convenience plugin for shared plugin (namely slot-manager plugin) nteroperaility.

  # Note: This plkugin is used only to provide the psstore AppBuilder API which
  # is required by the slot-manager shared plugin. As that plugin is used by ZB as well
  # we cannot simply eliminate that, and such the API request would break generation,
  # since PSStore funcionality is provided by the stack libraries, however code
  # generator cannot provide the requested AppBuildler API
  
  category=Multiprotocol
  quality=development
  root=./

  architecture=efr32

  providedApis=psstore

} 