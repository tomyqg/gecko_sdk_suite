#ISD afv6
# ISD version: 3.4.2712

# Application configuration
appId: ble
architecture: efr32~family[B]~performance[P]~radio[232]~flash[256K]~temp[G]~package[M]~pins[48]+BRD4100A+iar
deviceName: soc-smartPhone
generationDirectory: PATH(ISC_RELATIVE):.

# UI customization
hiddenLayoutElements: plugins,callbacks,other,radio

# Setup configurations
{setupId:hwConfig
featureLevel=1
active=true
}

{setupId:bleGattConfigurator
<?xml version="1.0" encoding="UTF-8"?><project>
  <gatt generic_attribute_service="true" header="gatt_db.h" name="Custom BLE GATT" out="gatt_db.c" prefix="gattdb_">
    <service advertise="false" name="Generic Access" requirement="mandatory" sourceId="org.bluetooth.service.generic_access" type="primary" uuid="1800">
      <informativeText>Abstract: The generic_access service contains generic information about the device. All available Characteristics are readonly. </informativeText>
      <characteristic id="device_name" name="Device Name" sourceId="org.bluetooth.characteristic.gap.device_name" uuid="2a00">
        <informativeText/>
        <value length="7" type="utf-8" variable_length="false">BG00000</value>
        <properties read="true" read_requirement="optional" write="true" write_requirement="optional"/>
      </characteristic>
      <characteristic name="Appearance" sourceId="org.bluetooth.characteristic.gap.appearance" uuid="2a01">
        <informativeText>Abstract: The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits). </informativeText>
        <value length="2" type="hex" variable_length="false">0003</value>
        <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
      </characteristic>
    </service>
    <service advertise="false" name="Device Information" requirement="mandatory" sourceId="org.bluetooth.service.device_information" type="primary" uuid="180A">
      <informativeText>Abstract: The Device Information Service exposes manufacturer and/or vendor information about a device. Summary: This service exposes manufacturer information about a device. The Device Information Service is instantiated as a Primary Service. Only one instance of the Device Information Service is exposed on a device. </informativeText>
      <characteristic name="Manufacturer Name String" sourceId="org.bluetooth.characteristic.manufacturer_name_string" uuid="2A29">
        <informativeText>Abstract: The value of this characteristic is a UTF-8 string representing the name of the manufacturer of the device. </informativeText>
        <value length="12" type="utf-8" variable_length="false">Silicon Labs</value>
        <properties const="true" const_requirement="optional" read="true" read_requirement="optional"/>
      </characteristic>
    </service>
    <service advertise="true" name="Health Thermometer" requirement="mandatory" sourceId="org.bluetooth.service.health_thermometer" type="primary" uuid="1809">
      <informativeText>Abstract: The Health Thermometer service exposes temperature and other data from a thermometer intended for healthcare and fitness applications. Summary: The Health Thermometer service is instantiated as a Primary Service. There are one or more instantiations of the Health Thermometer service per device claiming conformance with this specification. </informativeText>
      <characteristic id="temperature_measurement" name="Temperature Measurement" sourceId="org.bluetooth.characteristic.temperature_measurement" uuid="2a1c">
        <informativeText/>
        <value length="13" type="utf-8" variable_length="false"/>
        <properties indicate="true" indicate_requirement="optional"/>
      </characteristic>
      <characteristic name="Temperature Type" sourceId="org.bluetooth.characteristic.temperature_type" uuid="2a1d">
        <informativeText>Abstract: The Temperature Type characteristic is an enumeration that indicates where the temperature was measured. Summary: These Temperature Type values correspond to the Temperature Type descriptions used in ISO/IEEE 11073-10408-2008. </informativeText>
        <value length="1" type="hex" variable_length="false">2</value>
        <properties const="false" const_requirement="optional" read="true" read_requirement="optional"/>
      </characteristic>
      <characteristic name="Intermediate Temperature" sourceId="org.bluetooth.characteristic.intermediate_temperature" uuid="2a1e">
        <informativeText>Abstract: The Intermediate Temperature characteristic has the same format as the Temperature Measurement characteristic. However, due to a different context, the Value field is referred to as the Intermediate Temperature Value field. </informativeText>
        <value length="13" type="utf-8" variable_length="false"/>
        <properties const="false" const_requirement="optional" notify="true" notify_requirement="optional"/>
      </characteristic>
      <characteristic id="MeasInt" name="Measurement Interval" sourceId="org.bluetooth.characteristic.measurement_interval" uuid="2a21">
        <informativeText>Abstract: The Measurement Interval characteristic defines the time between measurements. Summary: This characteristic is capable of representing values from 1 second to 65535 seconds which is equal to 18 hours, 12 minutes and 15 seconds. </informativeText>
        <value length="2" type="hex" variable_length="false">1</value>
        <properties write="true" write_requirement="optional"/>
      </characteristic>
    </service>
    <service advertise="true" name="Immediate Alert" requirement="mandatory" sourceId="org.bluetooth.service.immediate_alert" type="primary" uuid="1802">
      <informativeText>Abstract: This service exposes a control point to allow a peer device to cause the device to immediately alert. Summary: The Immediate Alert service is instantiated as a Primary Service.     There is only one instance of the Immediate Alert service on a device.     There is only one instance of the Alert Level characteristic in an Immediate Alert service.     This alert continues until one of following conditions occurs:     - An implementation specific timeout     - User interaction on this device     - A new alert level is written     - The physical link is disconnected Examples: If the written alert level is "No Alert", no alerting is done on this device. If the written alert level is "Mild Alert", the device alerts. If the written alert level is "High Alert", the device alerts in the strongest possible way. </informativeText>
      <characteristic id="alert_level" name="Alert Level" sourceId="org.bluetooth.characteristic.alert_level" uuid="2a06">
        <informativeText>Abstract: The level of an alert a device is to sound. If this level is changed while the alert is being sounded, the new level should take effect. Summary: The value of the characteristic shall be an unsigned 8 bit integer that has a fixed point exponent of 0.     The Alert Level characteristic defines the level of alert, and is one of the following three values:     - Value 0, meaning "No Alert"     - Value 1, meaning "Mild Alert"     - Value 2, meaning "High Alert" Examples: The value 0x01 is interpreted as "Mild Alert" </informativeText>
        <value length="1" type="utf-8" variable_length="false"/>
        <properties write_no_response="true" write_no_response_requirement="optional"/>
      </characteristic>
    </service>
    <service advertise="false" name="Silicon Labs OTA" requirement="mandatory" sourceId="com.silabs.service.ota" type="primary" uuid="1D14D6EE-FD63-4FA1-BFA4-8F47B42119F0">
      <informativeText>Abstract: The Silicon Labs OTA Service enables over-the-air firmware update of the device. </informativeText>
      <characteristic id="ota_control" name="Silicon Labs OTA Control" sourceId="com.silabs.characteristic.ota_control" uuid="F7BF3564-FB6D-4E53-88A4-5E37E0326063">
        <informativeText>Abstract: Silicon Labs OTA Control. </informativeText>
        <value length="1" type="user" variable_length="false"/>
        <properties write="true" write_requirement="optional"/>
      </characteristic>
    </service>
  </gatt>
</project>
}

